{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","this","window","setInterval","console","log","toLocaleTimeString","setState","prevProps","name","props","clearInterval","className","Component","App","hasClock","clockName","setRandomName","randomName","Math","random","toString","slice","visibleClock","hiddenClock","document","addEventListener","ReactDOM","render","getElementById"],"mappings":"gLAUaA,EAAb,4MACEC,MAAyB,CACvBC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,IAAML,EAAO,IAAIC,KAGjBK,QAAQC,IAAIP,EAAKQ,sBAEjB,EAAKC,SAAS,CAAET,WACf,OAfP,gCAkBE,SAAmBU,GACbA,EAAUC,OAASR,KAAKS,MAAMD,MAEhCL,QAAQC,IAAR,uBAA4BG,EAAUC,KAAtC,eAAiDR,KAAKS,MAAMD,SArBlE,kCAyBE,WACEE,cAAcV,KAAKD,WA1BvB,oBA6BE,WACE,OACE,sBAAKY,UAAU,QAAf,UACE,mBAAGA,UAAU,cAAb,SACGX,KAAKS,MAAMD,OAGd,mBAAGG,UAAU,cAAb,SACGX,KAAKJ,MAAMC,KAAKQ,8BArC3B,GAA2BO,aCFrBC,E,4MACJjB,MAAyB,CACvBkB,UAAU,EACVC,UAAW,iB,EAQbC,cAAgBd,aAAY,WAC1B,IAAMe,EAAaC,KAAKC,SAASC,WAAWC,MAAM,EAAG,GAErD,EAAKf,SAAS,CAAES,UAAU,eAAD,OAAYE,OACpC,K,EAEHK,aAAe,WACb,EAAKhB,SAAS,CAAEQ,UAAU,K,EAG5BS,YAAc,WACZ,EAAKjB,SAAS,CAAEQ,UAAU,K,uDAhB5B,WACEU,SAASC,iBAAiB,QAASzB,KAAKsB,cACxCE,SAASC,iBAAiB,cAAezB,KAAKuB,e,oBAiBhD,WACE,MAAgCvB,KAAKJ,MAA7BkB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,OACE,sBAAKJ,UAAU,MAAf,UACE,6CAEA,qBAAKA,UAAU,aAAf,SACE,8BAAOG,GAAY,cAAC,EAAD,CAAON,KAAMO,e,GAjCxBH,aAwCHC,IC7Cfa,IAASC,OACP,cAAC,EAAD,IACAH,SAASI,eAAe,W","file":"static/js/main.4e967272.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  name: string,\n};\n\ntype State = {\n  date: Date,\n};\n\nexport class Clock extends Component<Props, State> {\n  state: Readonly<State> = {\n    date: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      const date = new Date();\n\n      // eslint-disable-next-line no-console\n      console.log(date.toLocaleTimeString());\n\n      this.setState({ date });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.log(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    return (\n      <div className=\"clock\">\n        <p className=\"clock__name\">\n          {this.props.name}\n        </p>\n\n        <p className=\"clock__time\">\n          {this.state.date.toLocaleTimeString()}\n        </p>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { Clock } from './components/Clock';\n\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n};\n\nclass App extends Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n    clockName: 'Clock №1',\n  };\n\n  componentDidMount() {\n    document.addEventListener('click', this.visibleClock);\n    document.addEventListener('contextmenu', this.hiddenClock);\n  }\n\n  setRandomName = setInterval(() => {\n    const randomName = Math.random().toString().slice(2, 6);\n\n    this.setState({ clockName: `Clock №${randomName}` });\n  }, 3000);\n\n  visibleClock = () => {\n    this.setState({ hasClock: true });\n  };\n\n  hiddenClock = () => {\n    this.setState({ hasClock: false });\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        <div className=\"App__clock\">\n          <div>{ hasClock && <Clock name={clockName} />}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}